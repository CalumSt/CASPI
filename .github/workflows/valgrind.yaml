name: Valgrind

on:
    push:
        branches: [ develop ]
    pull_request:
        branches: [ main ]

# When pushing new commits, cancel any running builds on that branch
concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

env:
    BUILD_TYPE: Debug
    TEST_DIR: Tests
    BUILD_DIR: build

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
            fail-fast: false

            # Set up a matrix to run the following 3 configurations:
            # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
            # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
            # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
            #
            # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
            matrix:
                os: [ubuntu-latest]
                build_type: [Debug]
                c_compiler: [gcc]
                cpp_compiler: [g++]

        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Install Valgrind
              run: sudo apt-get install -y valgrind

            - name: Configure CMake
                # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
                # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
              run:
                  cmake
                  -S ${{env.TEST_DIR}}
                  -B ${{ env.BUILD_DIR }}
                  -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
                  -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
                  -DCMAKE_CXX_FLAGS="-fsanitize=thread -g"
                  -DCMAKE_C_FLAGS="-fsanitize=thread -g"
                  -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=thread"
                  -DCMAKE_MODULE_LINKER_FLAGS="-fsanitize=thread"

            - name: Build
                # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
              run: cmake --build ${{ env.BUILD_DIR }} --config ${{ matrix.build_type }} -j4

            - name: Run Valgrind
              working-directory: ${{ env.BUILD_DIR }}
              run: ctest --build-config ${{ matrix.build_type }} -T memcheck